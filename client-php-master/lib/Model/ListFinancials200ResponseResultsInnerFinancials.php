<?php
/**
 * ListFinancials200ResponseResultsInnerFinancials
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Polygon API
 *
 * The future of fintech.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ListFinancials200ResponseResultsInnerFinancials Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ListFinancials200ResponseResultsInnerFinancials implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ListFinancials_200_response_results_inner_financials';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'balance_sheet' => '\OpenAPI\Client\Model\ListFinancials200ResponseResultsInnerFinancialsBalanceSheet',
        'cash_flow_statement' => 'object',
        'comprehensive_income' => 'object',
        'income_statement' => 'object'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'balance_sheet' => null,
        'cash_flow_statement' => null,
        'comprehensive_income' => null,
        'income_statement' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'balance_sheet' => false,
        'cash_flow_statement' => false,
        'comprehensive_income' => false,
        'income_statement' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'balance_sheet' => 'balance_sheet',
        'cash_flow_statement' => 'cash_flow_statement',
        'comprehensive_income' => 'comprehensive_income',
        'income_statement' => 'income_statement'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'balance_sheet' => 'setBalanceSheet',
        'cash_flow_statement' => 'setCashFlowStatement',
        'comprehensive_income' => 'setComprehensiveIncome',
        'income_statement' => 'setIncomeStatement'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'balance_sheet' => 'getBalanceSheet',
        'cash_flow_statement' => 'getCashFlowStatement',
        'comprehensive_income' => 'getComprehensiveIncome',
        'income_statement' => 'getIncomeStatement'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('balance_sheet', $data ?? [], null);
        $this->setIfExists('cash_flow_statement', $data ?? [], null);
        $this->setIfExists('comprehensive_income', $data ?? [], null);
        $this->setIfExists('income_statement', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets balance_sheet
     *
     * @return \OpenAPI\Client\Model\ListFinancials200ResponseResultsInnerFinancialsBalanceSheet|null
     */
    public function getBalanceSheet()
    {
        return $this->container['balance_sheet'];
    }

    /**
     * Sets balance_sheet
     *
     * @param \OpenAPI\Client\Model\ListFinancials200ResponseResultsInnerFinancialsBalanceSheet|null $balance_sheet balance_sheet
     *
     * @return self
     */
    public function setBalanceSheet($balance_sheet)
    {
        if (is_null($balance_sheet)) {
            throw new \InvalidArgumentException('non-nullable balance_sheet cannot be null');
        }
        $this->container['balance_sheet'] = $balance_sheet;

        return $this;
    }

    /**
     * Gets cash_flow_statement
     *
     * @return object|null
     */
    public function getCashFlowStatement()
    {
        return $this->container['cash_flow_statement'];
    }

    /**
     * Sets cash_flow_statement
     *
     * @param object|null $cash_flow_statement Cash flow statement. The keys in this object can be any of the fields listed in the Cash Flow Statement section of the <a target=\"_blank\" href=\"https://polygon.io/blog/financials-api-glossary-of-fields\">financials API glossary of terms</a>. See the attributes of the objects within `balance_sheet` for more details.
     *
     * @return self
     */
    public function setCashFlowStatement($cash_flow_statement)
    {
        if (is_null($cash_flow_statement)) {
            throw new \InvalidArgumentException('non-nullable cash_flow_statement cannot be null');
        }
        $this->container['cash_flow_statement'] = $cash_flow_statement;

        return $this;
    }

    /**
     * Gets comprehensive_income
     *
     * @return object|null
     */
    public function getComprehensiveIncome()
    {
        return $this->container['comprehensive_income'];
    }

    /**
     * Sets comprehensive_income
     *
     * @param object|null $comprehensive_income Comprehensive income. The keys in this object can be any of the fields listed in the Comprehensive Income section of the <a target=\"_blank\" href=\"https://polygon.io/blog/financials-api-glossary-of-fields\">financials API glossary of terms</a>. See the attributes of the objects within `balance_sheet` for more details.
     *
     * @return self
     */
    public function setComprehensiveIncome($comprehensive_income)
    {
        if (is_null($comprehensive_income)) {
            throw new \InvalidArgumentException('non-nullable comprehensive_income cannot be null');
        }
        $this->container['comprehensive_income'] = $comprehensive_income;

        return $this;
    }

    /**
     * Gets income_statement
     *
     * @return object|null
     */
    public function getIncomeStatement()
    {
        return $this->container['income_statement'];
    }

    /**
     * Sets income_statement
     *
     * @param object|null $income_statement Income statement. The keys in this object can be any of the fields listed in the Income Statement section of the <a target=\"_blank\" href=\"https://polygon.io/blog/financials-api-glossary-of-fields\">financials API glossary of terms</a>. See the attributes of the objects within `balance_sheet` for more details.
     *
     * @return self
     */
    public function setIncomeStatement($income_statement)
    {
        if (is_null($income_statement)) {
            throw new \InvalidArgumentException('non-nullable income_statement cannot be null');
        }
        $this->container['income_statement'] = $income_statement;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


